# Generated by Django 5.0.7 on 2025-04-21 13:44

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_holiday', models.BooleanField(default=False)),
                ('solar_day', models.IntegerField(blank=True, null=True)),
                ('solar_month', models.IntegerField(blank=True, null=True)),
                ('solar_year', models.IntegerField(blank=True, null=True)),
                ('solar_day_week', models.CharField(blank=True, max_length=10, null=True)),
                ('moon_day', models.IntegerField(blank=True, null=True)),
                ('moon_month', models.IntegerField(blank=True, null=True)),
                ('moon_year', models.IntegerField(blank=True, null=True)),
                ('moon_day_week', models.CharField(blank=True, max_length=10, null=True)),
                ('gregorian_day', models.IntegerField(blank=True, null=True)),
                ('gregorian_month', models.IntegerField(default=0)),
                ('gregorian_year', models.IntegerField(default=0)),
                ('gregorian_day_week', models.CharField(blank=True, max_length=10, null=True)),
                ('events', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Calendar Event',
                'verbose_name_plural': 'Calendar Events',
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='شهر')),
                ('temperature', models.FloatField(verbose_name='دما')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='توضیحات')),
                ('temp_min', models.FloatField(blank=True, null=True, verbose_name='حداقل دما')),
                ('temp_max', models.FloatField(blank=True, null=True, verbose_name='حداکثر دما')),
                ('humidity', models.FloatField(blank=True, null=True, verbose_name='رطوبت')),
                ('pressure', models.FloatField(blank=True, null=True, verbose_name='فشار هوا')),
                ('wind_speed', models.FloatField(blank=True, null=True, verbose_name='سرعت باد')),
                ('icon', models.CharField(blank=True, max_length=20, null=True, verbose_name='آیکون')),
                ('weather_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='توضیحات آب و هوا')),
                ('weather_icon', models.CharField(blank=True, max_length=20, null=True, verbose_name='آیکون آب و هوا')),
                ('request_date_time', models.DateTimeField(auto_now_add=True, verbose_name='زمان درخواست')),
            ],
            options={
                'verbose_name': 'آب و هوا',
                'verbose_name_plural': 'اطلاعات آب و هوا',
            },
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('type_of_class', models.CharField(max_length=50)),
                ('departure_datetime', models.DateTimeField()),
                ('request_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('calendar_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.calendarevent')),
                ('weather', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.weather')),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('type_of_class', models.CharField(max_length=50)),
                ('departure_datetime', models.DateTimeField()),
                ('request_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('calendar_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.calendarevent')),
                ('weather', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.weather')),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('type_of_class', models.CharField(max_length=50)),
                ('departure_datetime', models.DateTimeField()),
                ('request_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('calendar_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.calendarevent')),
                ('weather', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flights.weather')),
            ],
        ),
    ]
